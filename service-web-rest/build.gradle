description = 'SiteWhere Web/REST Microservice'

apply plugin: 'war'

apply plugin: 'spring-boot'
springBoot {
    mainClass = 'com.sitewhere.web.microservice.WebRestApplication'
}

// Prevents Logback conflict.
configurations {
    compile.exclude module: 'spring-boot-starter-logging'
}

dependencies {
	compile project(':sitewhere-core')
	compile project(':sitewhere-spring-spi')
	compile project(':sitewhere-protobuf')
	
	compile ('org.springframework.boot:spring-boot-starter-web')
    compile group: 'io.swagger', name: 'swagger-annotations', version:'1.5.10'	
    compile group: 'io.springfox', name: 'springfox-swagger2', version:'2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version:'2.7.0'
    compile group: 'org.springframework.security', name: 'spring-security-web'
}

// Create a Dockerfile.
task dockerFile(type: com.bmuschko.gradle.docker.tasks.image.Dockerfile, dependsOn: bootRepackage) {
    destFile = project.file('build/docker/Dockerfile')
    from 'ubuntu:14.04'
    maintainer 'Derek Adams "derek.adams@sitewhere.com"'
    
    // Install updates to the base image.
    runCommand 'apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:openjdk-r/ppa && apt-get update && apt-get install -y wget openjdk-8-jre-headless'
	
	// Copy Spring Boot jar.
	copyFile("${project.name}-${project.version}.war", "/opt")

	// Run the startup script and start tailing the log.
	defaultCommand 'java', '-jar', "/opt/${project.name}-${project.version}.war"
}

// Copy artifact to Docker input folder.
task copyArtifactToDocker(type: Copy, dependsOn: dockerFile) {
    from "${buildDir}/libs/${project.name}-${project.version}.war"
    into 'build/docker'
}

// Build an image from the Dockerfile.
task dockerImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage, dependsOn: copyArtifactToDocker) {
    inputDir = project.file('build/docker')
    tag = "${dockerRepository}/sitewhere/${project.name}:${version}"
}
