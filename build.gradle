import org.apache.tools.ant.filters.FixCrLfFilter;

buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://repo.spring.io/libs-snapshot" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
		classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
		classpath 'gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.7.3'
		classpath 'io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE'
		classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
		classpath 'com.github.skhatri:gradle-s3-plugin:1.0.2'
		classpath 'com.bmuschko:gradle-docker-plugin:3.0.3'
	}
}

ext['solr.version'] = '6.4.0'
ext['mongodb.version'] = '3.4.2'
ext['kafka.version'] = '0.11.0.0'
ext['zookeeper.version'] = '3.4.8'

apply plugin: 'distribution'

apply plugin: 's3'
s3 {
    bucket = 'sitewhere'
    awsProfile = 'gradle'
}

allprojects {
    group = 'com.sitewhere'
	version = '2.0.0'
	
    repositories {
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url 'http://maven.restlet.org' }
        maven { url "https://jitpack.io" }
        maven { url "http://dist.wso2.org/maven2/" }
        maven { url "http://oss.jfrog.org/artifactory/oss-release-local/" }
        maven { url "https://oss.sonatype.org/content/repositories/ksoap2-android-releases/" }
    	maven { url "https://repo.spring.io/libs-milestone" }
    }
}

subprojects {
	apply plugin: 'eclipse'
	
    // Use Spring dependency management.
 	apply plugin: 'io.spring.dependency-management'
	dependencyManagement {
		imports {
			mavenBom 'io.spring.platform:platform-bom:2.0.5.RELEASE'
		}
	}

	// Use Docker plugin to allow for creating/pushing an image.
	apply plugin: 'com.bmuschko.docker-remote-api'
	docker {
	    url = dockerProtocol + '://' + dockerHostname + ':' + dockerPort
	}
 	
 	// Choose Java settings.
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
    // Common dependencies used for all projects.
    dependencies {
        compile(group: 'org.apache.logging.log4j', name: 'log4j-api')
        compile(group: 'org.apache.logging.log4j', name: 'log4j-core')
        testCompile group: 'junit', name: 'junit'
    }
    test {
        exclude '**/*'
    }
}
