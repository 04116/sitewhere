plugins {
    id 'java'
    id 'checkstyle'
    id 'distribution'
    id 'com.sitewhere' version '3.0.0.alpha2' apply false
    id 'io.quarkus' version '0.26.1' 
    id "com.google.protobuf" version "0.8.10"
    id 'com.bmuschko.docker-remote-api' version '5.3.0' 
    id 'org.ajoberstar.grgit' version '2.2.1' 
    id 'com.github.hierynomus.license' version '0.15.0' 
    id 'com.moowork.node' version '1.3.1'
}

ext {
    git = org.ajoberstar.grgit.Grgit.open(currentDir: file('.'))
}

ext['git.revision'] = ext.git.head().id
ext['git.revision.abbrev'] = ext.git.head().abbreviatedId

ext['docker.base.image'] = 'openjdk:8-jre-alpine'
ext['docker.maintainer'] = 'admin@sitewhere.com'

ext['sitewhere.microservice.api.version'] = '3.0.0.alpha5'
ext['sitewhere.communication.api.version'] = '3.0.0.alpha2'
ext['sitewhere.mongodb.api.version'] = '3.0.0.alpha2'
ext['sitewhere.influxdb.api.version'] = '3.0.0.alpha2'
ext['sitewhere.cassandra.api.version'] = '3.0.0.alpha2'
ext['sitewhere.solr.api.version'] = '3.0.0.alpha2'
ext['kafka.version'] = '2.0.0'
ext['protobuf.version'] = '3.5.1'
ext['grpc.version'] = '1.25.0'
ext['guava.version'] = '27.1-jre'
ext['groovy.version'] = '2.4.12'
ext['siddhi.version'] = '3.1.2'
ext['jackson.version'] = '2.9.10'
    
allprojects {
    group = 'com.sitewhere'
	version = '3.0.0.alpha1'
	
    repositories {
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url 'http://maven.restlet.org' }
        maven { url "https://jitpack.io" }
        maven { url "http://oss.jfrog.org/artifactory/oss-release-local/" }
        maven { url "http://maven.wso2.org/nexus/content/repositories/releases/" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
		mavenLocal()
    }
}

subprojects {
	apply plugin: "com.github.hierynomus.license"
	license {
		header rootProject.file('HEADER')
    	include "**/*.java"
	}
	
	// Allow Docker settings to be overridden by build environment.
	if (System.getenv("DOCKER_REGISTRY_URL") != null) registryUrl = System.getenv("DOCKER_REGISTRY_URL")
	if (System.getenv("DOCKER_REGISTRY_USERNAME") != null) registryUsername = System.getenv("DOCKER_REGISTRY_USERNAME")
	if (System.getenv("DOCKER_REGISTRY_PASSWORD") != null) registryPassword = System.getenv("DOCKER_REGISTRY_PASSWORD")
	if (System.getenv("DOCKER_REGISTRY_EMAIL") != null) registryEmail = System.getenv("DOCKER_REGISTRY_EMAIL")
	
	// Apply SiteWhere.
	apply plugin: 'com.sitewhere'
	sitewhere {
		standardImage {
			jvmImage = "oracle/graalvm-ce:19.2.1"
		}
		nativeImage {
			graalImage = "sitewhere/graalvm-gradle:19.2.1"
			dockerRepository = dockerRepository
		}
		debug {
			enabled = true
		}
	}
		
	// Apply Docker plugin.
	apply plugin: 'com.bmuschko.docker-remote-api'
	docker {
	    url = (System.getenv("DOCKER_HOST") != null) ? System.getenv("DOCKER_HOST") : dockerProtocol + '://' + dockerHostname + ':' + dockerPort
	    registryCredentials {
	        url = registryUrl
	        username = registryUsername
	        password = registryPassword
	        email = registryEmail
	    }
	}
	
	// Apply Quarkus.
	apply plugin: 'io.quarkus'
 	
 	// Choose Java settings.
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
    // Common dependencies used for all projects.
    dependencies {	
		// Quarkus dependencies.
	    compile enforcedPlatform('io.quarkus:quarkus-bom:0.26.1')
    
    	// Testing dependencies.
		testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}
