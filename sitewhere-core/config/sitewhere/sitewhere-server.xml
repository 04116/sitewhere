<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:sw="http://www.sitewhere.com/schema/sitewhere/ce"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
           http://www.sitewhere.com/schema/sitewhere/ce http://www.sitewhere.org/schema/sitewhere/ce/1.0.0/sitewhere.xsd?a=18">
           
	<!-- Load property values for substitution -->
	<context:property-placeholder location="file:${CATALINA_BASE}/conf/sitewhere/sitewhere.properties"
		ignore-resource-not-found="true"/>
	
	<!-- ########################### -->
	<!-- # SITEWHERE CONFIGURATION # -->
	<!-- ########################### -->
	<sw:configuration>
		
		<!-- ########################### -->
		<!-- # DATASTORE CONFIGURATION # -->
		<!-- ########################### -->
		<sw:datastore>
		
			<!-- Default MongoDB Datastore -->
			<sw:mongo-datastore hostname="localhost" port="27017" databaseName="sitewhere"/>
		
			<!-- Default HBase Datastore -->
			<!--  
			<sw:hbase-datastore quorum="localhost"/>
			-->
			
			<!-- Improves performance by using EHCache to store device management entities -->
			<sw:ehcache-device-management-cache/>
			
			<!-- Initializes device model with sample data if datastore is empty -->
			<sw:default-device-model-initializer/>
			
			<!-- Initializes user model with sample data if datastore is empty -->
			<sw:default-user-model-initializer/>

		</sw:datastore>
		
		<!-- ####################### -->
		<!-- # DEVICE PROVISIONING # -->
		<!-- ####################### -->
		<sw:provisioning>
		
			<!-- Inbound event sources -->
			<sw:event-sources>

				<!-- Event source for protobuf messages over MQTT -->
				<sw:mqtt-event-source sourceId="protobuf" hostname="localhost"
					port="1883" topic="SiteWhere/input/protobuf">
					<sw:protobuf-event-decoder/>
				</sw:mqtt-event-source>

				<!-- Event source for JSON messages over MQTT -->
				<sw:mqtt-event-source sourceId="json" hostname="localhost" port="1883"
					topic="SiteWhere/input/jsonbatch">
					<sw:json-event-decoder/>
				</sw:mqtt-event-source>
				
				<!-- Event source for protobuf messages over ActiveMQ queue -->
				<sw:activemq-event-source sourceId="amqp" transportUri="amqp://0.0.0.0:5672"
					queueName="SITEWHERE.IN" numConsumers="10">
					<sw:protobuf-event-decoder/>
				</sw:activemq-event-source>
			</sw:event-sources>
		
			<!-- Inbound Processing Strategy -->
			<sw:inbound-processing-strategy>
				<sw:default-inbound-processing-strategy
					numEventProcessorThreads="150" enableMonitoring="true" monitoringIntervalSec="3"/>
			</sw:inbound-processing-strategy>
			
			<!-- Device registration -->
			<sw:registration>
				<sw:default-registration-manager allowNewDevices="true"/>
			</sw:registration>
			
			<!-- Device command routing -->
			<sw:command-routing>
				<sw:specification-mapping-router defaultDestination="default">
					<sw:mapping specification="417b36a8-21ef-4196-a8fe-cc756f994d0b"
						destination="arduino"/>
				</sw:specification-mapping-router>
			</sw:command-routing>
			
			<!-- Outbound command destinations -->
			<sw:command-destinations>

				<!-- Delivers commands via MQTT -->
				<sw:mqtt-command-destination destinationId="default"
					hostname="localhost" port="1883">
					<sw:protobuf-command-encoder/>
					<sw:hardware-id-topic-extractor commandTopicExpr="SiteWhere/commands/%s"
						systemTopicExpr="SiteWhere/system/%s"/>
				</sw:mqtt-command-destination>

				<!-- Delivers commands via MQTT -->
				<sw:mqtt-command-destination destinationId="arduino"
					hostname="localhost" port="1883">
					<sw:protobuf-command-encoder/>
					<sw:hardware-id-topic-extractor commandTopicExpr="SiteWhere/commands/%s"
						systemTopicExpr="SiteWhere/system/%s"/>
				</sw:mqtt-command-destination>

			</sw:command-destinations>

		</sw:provisioning>
		
		<!-- ############################ -->
		<!-- # INBOUND PROCESSING CHAIN # -->
		<!-- ############################ -->
		<sw:inbound-processing-chain>
			
			<!-- Store events and delegate to registration manager -->
			<sw:default-event-storage-processor/>

		</sw:inbound-processing-chain>
		
		<!-- ############################# -->
		<!-- # OUTBOUND PROCESSING CHAIN # -->
		<!-- ############################# -->
		<sw:outbound-processing-chain>
		
			<!-- Routes commands for provisioning -->
			<sw:provisioning-event-processor/>
			
			<!-- Performs zone checking for locations -->
			<!-- 
			<sw:zone-test-event-processor>
				<sw:zone-test zoneToken="777fa4e5-bc2f-458b-9968-b598b2e2d2ca" condition="outside"
					alertLevel="error" alertType="off.site" alertMessage="Asset has left the worksite."/>
			</sw:zone-test-event-processor>
			 -->
			
			<!-- Send outbound device events over Hazelcast -->
			<sw:outbound-event-processor ref="hazelcastDeviceEventProcessor"/>

		</sw:outbound-processing-chain>
		
		<!-- #################### -->
		<!-- # ASSET MANAGEMENT # -->
		<!-- #################### -->
		<sw:asset-management>

			<sw:filesystem-device-asset-module/>
			<sw:filesystem-hardware-asset-module/>
			<sw:filesystem-person-asset-module/>

		</sw:asset-management>

	</sw:configuration>

	<!-- ########################### -->
	<!-- # HAZELCAST CONFIGURATION # -->
	<!-- ########################### -->

	<!-- Provides access to a local Hazelcast instance for SiteWhere -->
	<bean id="hazelcastConfig" class="com.sitewhere.hazelcast.SiteWhereHazelcastConfiguration">
		<property name="configFileName" value="hazelcast.xml"/>
	</bean>

	<!-- ###################### -->
	<!-- # SOLR CONFIGURATION # -->
	<!-- ###################### -->

	<!-- Provides connectivity to Solr for components that need it -->
	<bean id="solrConfig" class="com.sitewhere.solr.SiteWhereSolrConfiguration">
		<property name="solrServerUrl" value="http://localhost:8983/solr/SiteWhere"/>
	</bean>

	<!-- ############################# -->
	<!-- # OUTBOUND EVENT PROCESSING # -->
	<!-- ############################# -->

	<!-- Broadcasts SiteWhere state over Hazelcast -->
	<bean id="hazelcastDeviceEventProcessor" class="com.sitewhere.hazelcast.HazelcastEventProcessor">
		<property name="configuration" ref="hazelcastConfig"/>
	</bean>

	<!-- Indexes SiteWhere events in Solr -->
	<bean id="solrDeviceEventProcessor" class="com.sitewhere.solr.SolrDeviceEventProcessor">
		<property name="solr" ref="solrConfig"/>
	</bean>

	<!-- ############################# -->
	<!-- # EXTERNAL SEARCH PROVIDERS # -->
	<!-- ############################# -->

	<!-- Configuration for Solr external search provider -->
	<bean id="solrSearchProvider" class="com.sitewhere.solr.search.SolrSearchProvider">
		<property name="solr" ref="solrConfig"/>
	</bean>

	<!-- Search provider manager and configured external search providers -->
	<bean id="searchProviderManager" class="com.sitewhere.server.search.SearchProviderManager">
		<property name="searchProviders">
			<list>
				<!-- <ref bean="solrSearchProvider"/> -->
			</list>
		</property>
	</bean>
           
	<!-- Import beans specific to the given edition -->
	<import resource="sitewhere-edition-${sitewhere.edition}.xml"/>

</beans>