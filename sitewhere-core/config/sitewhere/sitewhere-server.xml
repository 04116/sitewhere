<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:sw="http://www.sitewhere.com/schema/sitewhere"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
           http://www.sitewhere.com/schema/sitewhere http://www.sitewhere.org/schema/sitewhere/0.9.7/sitewhere.xsd?a=13563">
           
	<!-- Load property values for substitution -->
	<context:property-placeholder location="file:${CATALINA_BASE}/conf/sitewhere/sitewhere.properties"/>
	
	<!-- ########################### -->
	<!-- # SITEWHERE CONFIGURATION # -->
	<!-- ########################### -->
	<sw:configuration>
		
		<!-- ########################### -->
		<!-- # DATASTORE CONFIGURATION # -->
		<!-- ########################### -->
		<sw:datastore>
		
			<!-- Default MongoDB Datastore -->
			<sw:mongo-datastore hostname="localhost" port="27017" databaseName="sitewhere"/>
		
			<!-- Default HBase Datastore -->
			<!--  
			<sw:hbase-datastore quorum="localhost"/>
			-->
			
			<!-- Improves performance by using EHCache to store device management entities -->
			<sw:ehcache-device-management-cache/>
			
			<!-- Initializes device model with sample data if datastore is empty -->
			<sw:default-device-model-initializer/>
			
			<!-- Initializes user model with sample data if datastore is empty -->
			<sw:default-user-model-initializer/>

		</sw:datastore>
		
		<!-- ####################### -->
		<!-- # DEVICE PROVISIONING # -->
		<!-- ####################### -->
		<sw:provisioning>
		
			<!-- Inbound event sources -->
			<sw:event-sources>

				<!-- Event source for protobuf messages over MQTT -->
				<sw:mqtt-event-source hostname="localhost" port="1883"
					topic="SiteWhere/input/protobuf">
					<sw:decoder ref="protobufEventDecoder"/>
				</sw:mqtt-event-source>

				<!-- Event source for JSON messages over MQTT -->
				<sw:mqtt-event-source hostname="localhost" port="1883"
					topic="SiteWhere/input/jsonbatch">
					<sw:decoder ref="jsonEventDecoder"/>
				</sw:mqtt-event-source>

				<sw:event-source ref="socketEventSource"/>
			</sw:event-sources>
			
			<!-- Device registration -->
			<sw:registration>
				<sw:registration-manager ref="registrationManager"/>
			</sw:registration>
			
			<!-- Device command routing -->
			<sw:command-routing>
				<sw:specification-mapping-router>
					<sw:mapping specification="417b36a8-21ef-4196-a8fe-cc756f994d0b"
						destination="default"/>
					<sw:mapping specification="fc0f3d8d-c6e6-4fd2-b7d6-6f21bcf3a910"
						destination="laipac"/>
				</sw:specification-mapping-router>
			</sw:command-routing>
			
			<!-- Outbound command destinations -->
			<sw:command-destinations>

				<!-- Delivers commands via MQTT -->
				<sw:mqtt-command-destination destinationId="default"
					hostname="localhost" port="1883">
					<sw:encoder ref="protobufExecutionEncoder"/>
					<sw:hardware-id-topic-extractor commandTopicExpr="SiteWhere/commands/%s"
						systemTopicExpr="SiteWhere/system/%s"/>
				</sw:mqtt-command-destination>
				
				<!-- Delivers commands via Twilio SMS messages -->
				<sw:twilio-command-destination destinationId="laipac"
					accountSid="${twilio.account.sid}" authToken="${twilio.auth.token}" fromPhoneNumber="${twilio.from.phone.number}">
					<sw:encoder ref="laipacExecutionEncoder"/>
					<sw:parameter-extractor ref="laipacExtractor"/>
				</sw:twilio-command-destination>

			</sw:command-destinations>

		</sw:provisioning>
		
		<!-- ############################ -->
		<!-- # INBOUND PROCESSING CHAIN # -->
		<!-- ############################ -->
		<sw:inbound-processing-chain>
			
			<!-- Store events and delegate to registration manager -->
			<sw:default-event-storage-processor/>

		</sw:inbound-processing-chain>
		
		<!-- ############################# -->
		<!-- # OUTBOUND PROCESSING CHAIN # -->
		<!-- ############################# -->
		<sw:outbound-processing-chain>
		
			<!-- Routes commands for provisioning -->
			<sw:provisioning-event-processor/>
			
			<!-- Send outbound device events over Hazelcast -->
			<sw:outbound-event-processor ref="hazelcastDeviceEventProcessor"/>

		</sw:outbound-processing-chain>
		
		<!-- #################### -->
		<!-- # ASSET MANAGEMENT # -->
		<!-- #################### -->
		<sw:asset-management>

			<sw:filesystem-device-asset-module/>
			<sw:filesystem-hardware-asset-module/>
			<sw:filesystem-person-asset-module/>

		</sw:asset-management>

	</sw:configuration>

	<!-- ########################### -->
	<!-- # HAZELCAST CONFIGURATION # -->
	<!-- ########################### -->

	<!-- Provides access to a local Hazelcast instance for SiteWhere -->
	<bean id="hazelcastConfig" class="com.sitewhere.hazelcast.SiteWhereHazelcastConfiguration">
		<property name="configFileName" value="hazelcast.xml"/>
	</bean>

	<!-- ###################### -->
	<!-- # SOLR CONFIGURATION # -->
	<!-- ###################### -->

	<!-- Provides connectivity to Solr for components that need it -->
	<bean id="solrConfig" class="com.sitewhere.solr.SiteWhereSolrConfiguration">
		<property name="solrServerUrl" value="http://localhost:8983/solr/SiteWhere"/>
	</bean>

	<!-- ############################# -->
	<!-- # OUTBOUND EVENT PROCESSING # -->
	<!-- ############################# -->

	<!-- Broadcasts SiteWhere state over Hazelcast -->
	<bean id="hazelcastDeviceEventProcessor" class="com.sitewhere.hazelcast.HazelcastEventProcessor">
		<property name="configuration" ref="hazelcastConfig"/>
	</bean>

	<!-- Indexes SiteWhere events in Solr -->
	<bean id="solrDeviceEventProcessor" class="com.sitewhere.solr.SolrDeviceEventProcessor">
		<property name="solr" ref="solrConfig"/>
	</bean>

	<!-- ####################### -->
	<!-- # DEVICE PROVISIONING # -->
	<!-- ####################### -->

	<!-- GOOGLE PROTOCOL BUFFER INBOUND PROCESSING -->

	<!-- Decodes device event messages using Google Protocol Buffers -->
	<bean id="protobufEventDecoder" class="com.sitewhere.device.provisioning.protobuf.ProtobufDeviceEventDecoder"/>

	<!-- JSON BATCH INBOUND PROCESSING -->

	<!-- Decodes device event messages using Jackson/JSON -->
	<bean id="jsonEventDecoder" class="com.sitewhere.device.provisioning.json.JsonBatchEventDecoder"/>

	<!-- SOCKET EVENT DEBUGGING -->

	<!-- Device event receiver that pulls event data from a server socket -->
	<bean id="laipacReceiver" class="com.sitewhere.ee.devices.laipac.LaipacEventReceiver">
		<property name="port" value="8484"/>
		<property name="numThreads" value="5"/>
	</bean>

	<!-- Device event source for debugging socket requests -->
	<bean id="socketEventSource" class="com.sitewhere.ee.devices.laipac.LaipacEventSource">
		<property name="inboundEventReceivers">
			<list>
				<ref bean="laipacReceiver"/>
			</list>
		</property>
	</bean>

	<!-- REGISTRATION -->

	<!-- Manages registration of new devices in the system -->
	<bean id="registrationManager" class="com.sitewhere.device.provisioning.RegistrationManager">
		<property name="allowNewDevices" value="true"/>
		<property name="autoAssignSite" value="true"/>
	</bean>

	<!-- OUTBOUND PROCESSING -->

	<!-- Encodes device commands using Google Protocol Buffers -->
	<bean id="protobufExecutionEncoder" class="com.sitewhere.device.provisioning.protobuf.ProtobufExecutionEncoder"/>

	<!-- Encodes Laipac device commands into SMS messages -->
	<bean id="laipacExecutionEncoder" class="com.sitewhere.ee.devices.laipac.LaipacCommandEncoder"/>

	<!-- Extracts SMS parameters for Laipac devices -->
	<bean id="laipacExtractor" class="com.sitewhere.ee.devices.laipac.LaipacSmsParameterExtractor"/>

	<!-- ############################# -->
	<!-- # EXTERNAL SEARCH PROVIDERS # -->
	<!-- ############################# -->

	<!-- Configuration for Solr external search provider -->
	<bean id="solrSearchProvider" class="com.sitewhere.solr.search.SolrSearchProvider">
		<property name="solr" ref="solrConfig"/>
	</bean>

	<!-- Search provider manager and configured external search providers -->
	<bean id="searchProviderManager" class="com.sitewhere.server.search.SearchProviderManager">
		<property name="searchProviders">
			<list>
				<!-- <ref bean="solrSearchProvider"/> -->
			</list>
		</property>
	</bean>
           
	<!-- Import beans specific to the given edition -->
	<import resource="sitewhere-edition-${sitewhere.edition}.xml"/>

</beans>