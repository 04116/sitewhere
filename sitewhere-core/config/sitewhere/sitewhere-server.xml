<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
           
	<!-- Import beans specific to the given edition -->
	<import resource="sitewhere-edition-${sitewhere.edition}.xml"/>

	<!-- #################################### -->
	<!-- # SERVICE PROVIDER IMPLEMENTATIONS # -->
	<!-- #################################### -->

	<!-- Leave uncommented to use MongoDB datastore -->
	<import resource="sitewhere-mongodb.xml"/>

	<!-- Uncomment to use HBase datastore -->
	<!-- <import resource="sitewhere-hbase.xml"/> -->

	<!-- #################################### -->
	<!-- # DEVICE MANAGEMENT CACHE PROVIDER # -->
	<!-- #################################### -->

	<!-- Uses EHCache to cache device mangament entities -->
	<bean id="deviceManagementCacheProvider" class="com.sitewhere.ehcache.DeviceManagementCacheProvider"/>

	<!-- ########################### -->
	<!-- # HAZELCAST CONFIGURATION # -->
	<!-- ########################### -->

	<!-- Provides access to a local Hazelcast instance for SiteWhere -->
	<bean id="hazelcastConfig" class="com.sitewhere.hazelcast.SiteWhereHazelcastConfiguration">
		<property name="configFileName" value="hazelcast.xml"/>
	</bean>

	<!-- ###################### -->
	<!-- # SOLR CONFIGURATION # -->
	<!-- ###################### -->

	<!-- Provides connectivity to Solr for components that need it -->
	<bean id="solrConfig" class="com.sitewhere.solr.SiteWhereSolrConfiguration">
		<property name="solrServerUrl" value="http://localhost:8983/solr/SiteWhere"/>
	</bean>

	<!-- ############################ -->
	<!-- # INBOUND EVENT PROCESSING # -->
	<!-- ############################ -->

	<!-- Takes inbound device events and stores them using device management SPI calls -->
	<bean id="eventStorageProcessor"
		class="com.sitewhere.device.event.processor.DefaultEventStorageProcessor"/>

	<!-- Inbound event processor chain configuration -->
	<bean id="inboundProcessorChain"
		class="com.sitewhere.device.event.processor.DefaultInboundEventProcessorChain">
		<property name="processors">
			<list>
				<ref bean="eventStorageProcessor"/>
			</list>
		</property>
	</bean>

	<!-- ############################# -->
	<!-- # OUTBOUND EVENT PROCESSING # -->
	<!-- ############################# -->

	<!-- Hands off command invocations to provisioning for processing -->
	<bean id="provisioningEventProcessor"
		class="com.sitewhere.device.provisioning.ProvisioningEventProcessor"/>

	<!-- Broadcasts SiteWhere state over Hazelcast -->
	<bean id="hazelcastDeviceEventProcessor" class="com.sitewhere.hazelcast.HazelcastEventProcessor">
		<property name="configuration" ref="hazelcastConfig"/>
	</bean>

	<!-- Indexes SiteWhere events in Solr -->
	<bean id="solrDeviceEventProcessor" class="com.sitewhere.solr.SolrDeviceEventProcessor">
		<property name="solr" ref="solrConfig"/>
	</bean>

	<!-- Outbound event processor chain configuration -->
	<bean id="outboundProcessorChain"
		class="com.sitewhere.device.event.processor.DefaultOutboundEventProcessorChain">
		<property name="processors">
			<list>
				<ref bean="provisioningEventProcessor"/>
				<!-- <ref bean="solrDeviceEventProcessor"/> -->
				<ref bean="hazelcastDeviceEventProcessor"/>
			</list>
		</property>
	</bean>

	<!-- ####################### -->
	<!-- # DEVICE PROVISIONING # -->
	<!-- ####################### -->

	<!-- GOOGLE PROTOCOL BUFFER INBOUND PROCESSING -->

	<!-- Device event receiver that monitors an MQTT topic for events (protobuf format) -->
	<bean id="protobufMqttEventReceiver"
		class="com.sitewhere.device.provisioning.mqtt.MqttInboundEventReceiver">
		<property name="hostname" value="localhost"/>
		<property name="port" value="1883"/>
		<property name="topic" value="SiteWhere/input/protobuf"/>
	</bean>

	<!-- Decodes device event messages using Google Protocol Buffers -->
	<bean id="protobufEventDecoder"
		class="com.sitewhere.device.provisioning.protobuf.ProtobufDeviceEventDecoder"/>

	<!-- Device event source for protobuf messages over MQTT -->
	<bean id="protbufEventSource"
		class="com.sitewhere.device.provisioning.BinaryInboundEventSource">
		<property name="deviceEventDecoder" ref="protobufEventDecoder"/>
		<property name="inboundEventReceivers">
			<list>
				<ref bean="protobufMqttEventReceiver"/>
			</list>
		</property>
	</bean>

	<!-- JSON BATCH INBOUND PROCESSING -->

	<!-- Device event receiver that monitors an MQTT topic for events (JSON batch format) -->
	<bean id="jsonMqttEventReceiver"
		class="com.sitewhere.device.provisioning.mqtt.MqttInboundEventReceiver">
		<property name="hostname" value="localhost"/>
		<property name="port" value="1883"/>
		<property name="topic" value="SiteWhere/input/jsonbatch"/>
	</bean>

	<!-- Decodes device event messages using Jackson/JSON -->
	<bean id="jsonEventDecoder"
		class="com.sitewhere.device.provisioning.json.JsonBatchEventDecoder"/>

	<!-- Device event source for JSON messages over MQTT -->
	<bean id="jsonEventSource"
		class="com.sitewhere.device.provisioning.BinaryInboundEventSource">
		<property name="deviceEventDecoder" ref="jsonEventDecoder"/>
		<property name="inboundEventReceivers">
			<list>
				<ref bean="jsonMqttEventReceiver"/>
			</list>
		</property>
	</bean>

	<!-- SOCKET EVENT DEBUGGING -->

	<!-- Device event receiver that pulls event data from a server socket -->
	<bean id="laipacReceiver" class="com.sitewhere.ee.devices.laipac.LaipacEventReceiver">
		<property name="port" value="8484"/>
		<property name="numThreads" value="5"/>
	</bean>

	<!-- Device event source for debugging socket requests -->
	<bean id="socketEventSource" class="com.sitewhere.ee.devices.laipac.LaipacEventSource">
		<property name="inboundEventReceivers">
			<list>
				<ref bean="laipacReceiver"/>
			</list>
		</property>
	</bean>

	<!-- REGISTRATION -->

	<!-- Manages registration of new devices in the system -->
	<bean id="protobufRegistrationManager"
		class="com.sitewhere.device.provisioning.protobuf.ProtobufRegistrationManager">
		<property name="allowNewDevices" value="true"/>
		<property name="autoAssignSite" value="true"/>
	</bean>

	<!-- OUTBOUND PROCESSING -->

	<!-- Encodes device commands using Google Protocol Buffers -->
	<bean id="protobufExecutionEncoder"
		class="com.sitewhere.device.provisioning.protobuf.ProtobufExecutionEncoder"/>

	<!-- Delivery provider that publishes commands to MQTT topics -->
	<bean id="mqttDeliveryProvider"
		class="com.sitewhere.device.provisioning.mqtt.MqttCommandDeliveryProvider">
		<property name="hostname" value="localhost"/>
		<property name="port" value="1883"/>
		<property name="commandTopicPrefix" value="SiteWhere/commands/"/>
		<property name="systemTopicPrefix" value="SiteWhere/system/"/>
	</bean>

	<!-- Agent that encodes and delivers protobuf messages over MQTT -->
	<bean id="defaultCommandAgent"
		class="com.sitewhere.device.provisioning.mqtt.MqttOutboundCommandAgent">
		<property name="agentId" value="default"/>
		<property name="commandExecutionEncoder" ref="protobufExecutionEncoder"/>
		<property name="commandDeliveryProvider" ref="mqttDeliveryProvider"/>
	</bean>

	<!-- Router that sends commands via a single agent -->
	<bean id="router"
		class="com.sitewhere.device.provisioning.SingleChoiceCommandRouter"/>

	<!-- Configures device provisioning -->
	<bean id="deviceProvisioning"
		class="com.sitewhere.device.provisioning.DefaultDeviceProvisioning">
		<property name="registrationManager" ref="protobufRegistrationManager"/>
		<property name="inboundEventSources">
			<list>
				<ref bean="protbufEventSource"/>
				<ref bean="jsonEventSource"/>
				<ref bean="socketEventSource"/>
			</list>
		</property>
		<property name="outboundCommandRouter" ref="router"/>
		<property name="outboundCommandAgents">
			<list>
				<ref bean="defaultCommandAgent"/>
			</list>
		</property>
	</bean>

	<!-- ##################### -->
	<!-- # DATA INITIALIZERS # -->
	<!-- ##################### -->

	<!-- Default file system hardware asset module -->
	<bean id="userModelInitializer" class="com.sitewhere.server.user.DefaultUserModelInitializer">
		<property name="initializeIfNoConsole" value="Yes"/>
	</bean>

	<!-- Default file system hardware asset module -->
	<bean id="deviceModelInitializer"
		class="com.sitewhere.server.device.DefaultDeviceModelInitializer">
		<property name="initializeIfNoConsole" value="Yes"/>
	</bean>

	<!-- ############################# -->
	<!-- # EXTERNAL SEARCH PROVIDERS # -->
	<!-- ############################# -->

	<!-- Configuration for Solr external search provider -->
	<bean id="solrSearchProvider" class="com.sitewhere.solr.search.SolrSearchProvider">
		<property name="solr" ref="solrConfig"/>
	</bean>

	<!-- Search provider manager and configured external search providers -->
	<bean id="searchProviderManager" class="com.sitewhere.server.search.SearchProviderManager">
		<property name="searchProviders">
			<list>
				<!-- <ref bean="solrSearchProvider"/> -->
			</list>
		</property>
	</bean>

	<!-- ############################## -->
	<!-- # ASSET MANAGEMENT REFERENCE # -->
	<!-- ############################## -->

	<import resource="assets/sitewhere-assets.xml"/>

</beans>