<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:sw="http://www.sitewhere.com/schema/sitewhere"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
           http://www.sitewhere.com/schema/sitewhere http://www.sitewhere.org/schema/sitewhere/0.9.7/sitewhere.xsd?a=1234">
           
	<!-- Load property values for substitution -->
	<context:property-placeholder location="file:${CATALINA_BASE}/conf/sitewhere/sitewhere.properties"/>
	
	<!-- ########################### -->
	<!-- # SITEWHERE CONFIGURATION # -->
	<!-- ########################### -->
	<sw:configuration>
		
		<!-- ########################### -->
		<!-- # DATASTORE CONFIGURATION # -->
		<!-- ########################### -->
		<sw:datastore>
		
			<!-- Default MongoDB Datastore -->
			<sw:mongo-datastore hostname="localhost" port="27017" databaseName="sitewhere"/>
		
			<!-- Default HBase Datastore -->
			<!--  
			<sw:hbase-datastore quorum="localhost"/>
			-->
			
			<!-- Improves performance by using EHCache to store device management entities -->
			<sw:ehcache-device-management-cache/>

		</sw:datastore>
		
		<!-- ############################ -->
		<!-- # INBOUND PROCESSING CHAIN # -->
		<!-- ############################ -->
		<sw:inbound-processing-chain>
			
			<!-- Store events and delegate to registration manager -->
			<sw:default-event-storage-processor/>

		</sw:inbound-processing-chain>
		
		<!-- ############################# -->
		<!-- # OUTBOUND PROCESSING CHAIN # -->
		<!-- ############################# -->
		<sw:outbound-processing-chain>
		
			<!-- Routes commands for provisioning -->
			<sw:provisioning-event-processor/>
			
			<!-- Send outbound device events over Hazelcast -->
			<sw:outbound-event-processor ref="hazelcastDeviceEventProcessor"/>

		</sw:outbound-processing-chain>
		
		<!-- ####################### -->
		<!-- # DEVICE PROVISIONING # -->
		<!-- ####################### -->
		<sw:provisioning>
		
			<!-- Inbound event sources -->
			<sw:event-sources>
				<sw:event-source ref="protbufEventSource"/>
				<sw:event-source ref="jsonEventSource"/>
				<sw:event-source ref="socketEventSource"/>
			</sw:event-sources>
			
			<!-- Device registration -->
			<sw:registration>
				<sw:registration-manager ref="protobufRegistrationManager"/>
			</sw:registration>
			
			<!-- Device command routing -->
			<sw:command-routing>
				<sw:specification-mapping-router>
					<sw:mapping specification="417b36a8-21ef-4196-a8fe-cc756f994d0b" agent="default"/>
					<sw:mapping specification="fc0f3d8d-c6e6-4fd2-b7d6-6f21bcf3a910" agent="laipac"/>
				</sw:specification-mapping-router>
			</sw:command-routing>
			
			<!-- Outbound command agents -->
			<sw:command-agents>
				<sw:command-agent ref="defaultCommandAgent"/>
				<sw:command-agent ref="laipacCommandAgent"/>
			</sw:command-agents>

		</sw:provisioning>

	</sw:configuration>

	<!-- ########################### -->
	<!-- # HAZELCAST CONFIGURATION # -->
	<!-- ########################### -->

	<!-- Provides access to a local Hazelcast instance for SiteWhere -->
	<bean id="hazelcastConfig" class="com.sitewhere.hazelcast.SiteWhereHazelcastConfiguration">
		<property name="configFileName" value="hazelcast.xml"/>
	</bean>

	<!-- ###################### -->
	<!-- # SOLR CONFIGURATION # -->
	<!-- ###################### -->

	<!-- Provides connectivity to Solr for components that need it -->
	<bean id="solrConfig" class="com.sitewhere.solr.SiteWhereSolrConfiguration">
		<property name="solrServerUrl" value="http://localhost:8983/solr/SiteWhere"/>
	</bean>

	<!-- ############################# -->
	<!-- # OUTBOUND EVENT PROCESSING # -->
	<!-- ############################# -->

	<!-- Broadcasts SiteWhere state over Hazelcast -->
	<bean id="hazelcastDeviceEventProcessor" class="com.sitewhere.hazelcast.HazelcastEventProcessor">
		<property name="configuration" ref="hazelcastConfig"/>
	</bean>

	<!-- Indexes SiteWhere events in Solr -->
	<bean id="solrDeviceEventProcessor" class="com.sitewhere.solr.SolrDeviceEventProcessor">
		<property name="solr" ref="solrConfig"/>
	</bean>

	<!-- ####################### -->
	<!-- # DEVICE PROVISIONING # -->
	<!-- ####################### -->

	<!-- GOOGLE PROTOCOL BUFFER INBOUND PROCESSING -->

	<!-- Device event receiver that monitors an MQTT topic for events (protobuf format) -->
	<bean id="protobufMqttEventReceiver" class="com.sitewhere.device.provisioning.mqtt.MqttInboundEventReceiver">
		<property name="hostname" value="localhost"/>
		<property name="port" value="1883"/>
		<property name="topic" value="SiteWhere/input/protobuf"/>
	</bean>

	<!-- Decodes device event messages using Google Protocol Buffers -->
	<bean id="protobufEventDecoder" class="com.sitewhere.device.provisioning.protobuf.ProtobufDeviceEventDecoder"/>

	<!-- Device event source for protobuf messages over MQTT -->
	<bean id="protbufEventSource" class="com.sitewhere.device.provisioning.BinaryInboundEventSource">
		<property name="deviceEventDecoder" ref="protobufEventDecoder"/>
		<property name="inboundEventReceivers">
			<list>
				<ref bean="protobufMqttEventReceiver"/>
			</list>
		</property>
	</bean>

	<!-- JSON BATCH INBOUND PROCESSING -->

	<!-- Device event receiver that monitors an MQTT topic for events (JSON batch format) -->
	<bean id="jsonMqttEventReceiver" class="com.sitewhere.device.provisioning.mqtt.MqttInboundEventReceiver">
		<property name="hostname" value="localhost"/>
		<property name="port" value="1883"/>
		<property name="topic" value="SiteWhere/input/jsonbatch"/>
	</bean>

	<!-- Decodes device event messages using Jackson/JSON -->
	<bean id="jsonEventDecoder" class="com.sitewhere.device.provisioning.json.JsonBatchEventDecoder"/>

	<!-- Device event source for JSON messages over MQTT -->
	<bean id="jsonEventSource" class="com.sitewhere.device.provisioning.BinaryInboundEventSource">
		<property name="deviceEventDecoder" ref="jsonEventDecoder"/>
		<property name="inboundEventReceivers">
			<list>
				<ref bean="jsonMqttEventReceiver"/>
			</list>
		</property>
	</bean>

	<!-- SOCKET EVENT DEBUGGING -->

	<!-- Device event receiver that pulls event data from a server socket -->
	<bean id="laipacReceiver" class="com.sitewhere.ee.devices.laipac.LaipacEventReceiver">
		<property name="port" value="8484"/>
		<property name="numThreads" value="5"/>
	</bean>

	<!-- Device event source for debugging socket requests -->
	<bean id="socketEventSource" class="com.sitewhere.ee.devices.laipac.LaipacEventSource">
		<property name="inboundEventReceivers">
			<list>
				<ref bean="laipacReceiver"/>
			</list>
		</property>
	</bean>

	<!-- REGISTRATION -->

	<!-- Manages registration of new devices in the system -->
	<bean id="protobufRegistrationManager" class="com.sitewhere.device.provisioning.protobuf.ProtobufRegistrationManager">
		<property name="allowNewDevices" value="true"/>
		<property name="autoAssignSite" value="true"/>
	</bean>

	<!-- OUTBOUND PROCESSING -->

	<!-- Encodes device commands using Google Protocol Buffers -->
	<bean id="protobufExecutionEncoder" class="com.sitewhere.device.provisioning.protobuf.ProtobufExecutionEncoder"/>

	<!-- Delivery provider that publishes commands to MQTT topics -->
	<bean id="mqttDeliveryProvider" class="com.sitewhere.device.provisioning.mqtt.MqttCommandDeliveryProvider">
		<property name="hostname" value="localhost"/>
		<property name="port" value="1883"/>
		<property name="commandTopicPrefix" value="SiteWhere/commands/"/>
		<property name="systemTopicPrefix" value="SiteWhere/system/"/>
	</bean>

	<!-- Agent that encodes and delivers protobuf messages over MQTT -->
	<bean id="defaultCommandAgent" class="com.sitewhere.device.provisioning.mqtt.MqttOutboundCommandAgent">
		<property name="agentId" value="default"/>
		<property name="commandExecutionEncoder" ref="protobufExecutionEncoder"/>
		<property name="commandDeliveryProvider" ref="mqttDeliveryProvider"/>
	</bean>

	<!-- Encodes Laipac device commands into SMS messages -->
	<bean id="laipacExecutionEncoder" class="com.sitewhere.ee.devices.laipac.LaipacCommandEncoder"/>

	<!-- Extracts SMS parameters for Laipac devices -->
	<bean id="laipacExtractor" class="com.sitewhere.ee.devices.laipac.LaipacSmsParameterExtractor"/>

	<!-- Delivery provider sends commands via Twilio SMS -->
	<bean id="twilioDeliveryProvider" class="com.sitewhere.twilio.TwilioCommandDeliveryProvider">
		<property name="accountSid" value="${twilio.account.sid}"/>
		<property name="authToken" value="${twilio.auth.token}"/>
		<property name="fromPhoneNumber" value="${twilio.from.phone.number}"/>
	</bean>

	<!-- Agent that encodes and delivers Laipac commands via SMS -->
	<bean id="laipacCommandAgent" class="com.sitewhere.device.provisioning.sms.SmsOutboundCommandAgent">
		<property name="agentId" value="laipac"/>
		<property name="commandExecutionEncoder" ref="laipacExecutionEncoder"/>
		<property name="commandDeliveryParameterExtractor" ref="laipacExtractor"/>
		<property name="commandDeliveryProvider" ref="twilioDeliveryProvider"/>
	</bean>

	<!-- ##################### -->
	<!-- # DATA INITIALIZERS # -->
	<!-- ##################### -->

	<!-- Default file system hardware asset module -->
	<bean id="userModelInitializer" class="com.sitewhere.server.user.DefaultUserModelInitializer">
		<property name="initializeIfNoConsole" value="Yes"/>
	</bean>

	<!-- Default file system hardware asset module -->
	<bean id="deviceModelInitializer" class="com.sitewhere.server.device.DefaultDeviceModelInitializer">
		<property name="initializeIfNoConsole" value="Yes"/>
	</bean>

	<!-- ############################# -->
	<!-- # EXTERNAL SEARCH PROVIDERS # -->
	<!-- ############################# -->

	<!-- Configuration for Solr external search provider -->
	<bean id="solrSearchProvider" class="com.sitewhere.solr.search.SolrSearchProvider">
		<property name="solr" ref="solrConfig"/>
	</bean>

	<!-- Search provider manager and configured external search providers -->
	<bean id="searchProviderManager" class="com.sitewhere.server.search.SearchProviderManager">
		<property name="searchProviders">
			<list>
				<!-- <ref bean="solrSearchProvider"/> -->
			</list>
		</property>
	</bean>

	<!-- ############################## -->
	<!-- # ASSET MANAGEMENT REFERENCE # -->
	<!-- ############################## -->

	<import resource="assets/sitewhere-assets.xml"/>
           
	<!-- Import beans specific to the given edition -->
	<import resource="sitewhere-edition-${sitewhere.edition}.xml"/>

</beans>