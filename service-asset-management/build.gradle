description = 'SiteWhere Asset Management Microservice'

dependencies {
	compile project(':sitewhere-core')
	compile project(':sitewhere-spring-spi')
	compile project(':sitewhere-hbase')
	compile project(':sitewhere-mongodb')
	
	// WSO2 dependencies.
    compile group: 'com.google.code.ksoap2-android', name: 'ksoap2-android', version:'3.4.0'
    compile group: 'com.google.code.ksoap2-android', name: 'ksoap2-j2se', version:'3.4.0'
    compile group: 'com.google.code.ksoap2-android', name: 'ksoap2-extras', version:'3.4.0'
}

apply plugin: 'spring-boot'
springBoot {
    mainClass = 'com.sitewhere.asset.AssetManagementApplication'
}

// Create a Dockerfile.
task dockerFile(type: com.bmuschko.gradle.docker.tasks.image.Dockerfile, dependsOn: bootRepackage) {
    destFile = project.file('build/docker/Dockerfile')
    from 'ubuntu:14.04'
    maintainer 'Derek Adams "derek.adams@sitewhere.com"'
    
    // Install updates to the base image.
    runCommand 'apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:openjdk-r/ppa && apt-get update && apt-get install -y wget openjdk-8-jre-headless'
	
	// Expose web and Hazelcast ports.
	exposePort 8080, 5701

	// Set environment variable.
	environmentVariable 'SITEWHERE_HOME', "/opt/${swArtifact}-${version}"
	
	// Copy archive and install SiteWhere.
	copyFile("${swArtifact}-${project.version}.tgz", "/opt")
	runCommand "cd /opt && tar xvf ${swArtifact}-${version}.tgz && rm ${swArtifact}-${version}.tgz && ln -s /opt/${swArtifact}-${version} /opt/sitewhere && useradd -d /opt/sitewhere sitewhere && chown -R sitewhere.sitewhere /opt/${swArtifact}-${version} && chown -R sitewhere.sitewhere /opt/sitewhere && cd /opt/sitewhere && chmod +x /opt/${swArtifact}-${version}/bin/*.sh"

	// Run the startup script and start tailing the log.
	defaultCommand '/opt/sitewhere/bin/startup.sh' 
}

// Copy artifact to Docker input folder.
task copyArtifactToDocker(type: Copy, dependsOn: dockerFile) {
    from "$buildDir/distributions/${swArtifact}-${project.version}.tgz"
    into 'build/docker'
}

// Build an image from the Dockerfile.
task dockerImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage, dependsOn: copyArtifactToDocker) {
    inputDir = project.file('build/docker')
    tag = "${dockerRepository}/sitewhere/sitewhere:${version}"
}
