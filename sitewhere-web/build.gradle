
apply plugin: 'war'

description = 'SiteWhere Web Components'
dependencies {
    compile project(':sitewhere-activemq')
    compile project(':sitewhere-azure')
    compile project(':sitewhere-core')
    compile project(':sitewhere-ehcache')
    compile project(':sitewhere-hbase')
    compile project(':sitewhere-gnuhealth')
    compile project(':sitewhere-groovy')
    compile project(':sitewhere-influx')
    compile project(':sitewhere-magento')
    compile project(':sitewhere-mongodb')
    compile project(':sitewhere-protobuf')
    compile project(':sitewhere-rabbit-mq')
    compile project(':sitewhere-siddhi')
    compile project(':sitewhere-solr')
    compile project(':sitewhere-spark')
    compile project(':sitewhere-spring')
    compile project(':sitewhere-twilio')
    compile project(':sitewhere-wso2')
    compile group: 'org.springframework', name: 'spring-web'
    compile group: 'org.springframework', name: 'spring-webmvc'
    compile group: 'org.springframework', name: 'spring-context'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
    compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version:'2.7.0'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.10', version:'2.6.3'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-jsonSchema', version:'2.7.0'
    compile group: 'com.wordnik', name: 'swagger-core_2.10', version:'1.3.5'
    compile group: 'com.wordnik', name: 'swagger-annotations', version:'1.3.5'
    compile group: 'com.mangofactory', name: 'swagger-springmvc', version:'0.9.0'
    compile group: 'com.google.guava', name: 'guava'
    compile group: 'commons-lang', name: 'commons-lang'
    compile group: 'javax.mail', name: 'mail', version: '1.4'
    
    runtime group: 'javax.servlet', name: 'jstl', version:'1.1.1'
    
    providedCompile (group: 'com.sun.jersey.jersey-test-framework', name:'jersey-test-framework-grizzly2', version:'1.9') {
        exclude (module: 'jersey-server')
        exclude (module: 'jersey-core')
    }
    providedCompile group: 'javax.servlet.jsp', name:'jsp-api', version: '2.1'
    providedCompile group: 'javax.servlet', name: 'servlet-api', version:'2.3'
    providedCompile group: 'tomcat', name:'jasper-compiler', version: '5.5.23'
    providedCompile (group: 'tomcat', name:'jasper-runtime', version: '5.5.23') {
        exclude (module: 'commons-el')
    }

    providedCompile (group: 'org.reflections', name: 'reflections', version:'0.9.10') {
        exclude (module: 'guava')
    }
    
    providedCompile group: 'org.pegdown', name: 'pegdown', version:'1.5.0'
    providedCompile group: 'com.thoughtworks.paranamer', name: 'paranamer', version:'2.8'
}

task manifestJar(dependsOn:'classes',type: Jar) {
    archiveName 'restdoc-classpath.jar'
    doFirst {
        manifest {
             attributes 'Class-Path': configurations.compile.files.collect{ project.uri(it) }.join(' ')
        }
    }
}

task restDocumentationGenerator(type: JavaExec, dependsOn: 'manifestJar') {
    main = 'com.sitewhere.web.rest.documentation.RestDocumentationGenerator'
    classpath = sourceSets.main.output + files(manifestJar.archivePath)
    args "$projectDir/src/main/documentation", "$buildDir/rest"
}

task restDocZip(type: Zip, dependsOn: restDocumentationGenerator) {
    classifier = 'api'
    from "$buildDir/rest"
}

artifacts {
    archives restDocZip
}

