<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.sitewhere.com/schema/sitewhere" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:beans="http://www.springframework.org/schema/beans" targetNamespace="http://www.sitewhere.com/schema/sitewhere"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans"
		schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.1.xsd"/>

	<xsd:element name="configuration" type="configurationType">
		<xsd:annotation>
			<xsd:documentation>
				Provides configuration information for a SiteWhere server instance.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>

	<xsd:complexType name="configurationType">
		<xsd:all>
			<xsd:element name="datastore" type="datastoreType" minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>
						Provides information about how SiteWhere data is to be persisted
						and how the core device and user management service provider interfaces are
						implemented. Caching of persisted data is also configured in this section.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="provisioning" type="provisioningType" minOccurs="0"
				maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>
						Provisioning includes receiving inbound event data and registering
						devices as well as routing, encoding, and delivering device commands.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="inbound-processing-chain" type="inboundProcessingChainType"
				minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>
						A chain of processors through which all inbound device information
						is passed. Each processor handles some piece of processing and passes information on
						to the next.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="outbound-processing-chain" type="outboundProcessingChainType"
				minOccurs="0" maxOccurs="1">
				<xsd:annotation>
					<xsd:documentation>
						A chain of processors through which all outbound device events are
						passed. Each processor handles some piece of processing and passes information on to
						the next.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>

	<xsd:complexType name="datastoreType">
		<xsd:sequence>
			<xsd:choice>
				<xsd:element name="mongo-datastore" type="mongoDatastoreType">
					<xsd:annotation>
						<xsd:documentation>
							Datastore that includes MongoDB connectivity along with device
							management and user mangemement implementations.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="hbase-datastore" type="hbaseDatastoreType">
					<xsd:annotation>
						<xsd:documentation>
							Datastore that includes HBase connectivity along with device
							management and user mangemement implementations.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:choice minOccurs="0" maxOccurs="1">
				<xsd:element name="ehcache-device-management-cache" type="ehcacheDeviceManagementCacheType"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="mongoDatastoreType">
		<xsd:attribute name="hostname" type="xsd:string"></xsd:attribute>
		<xsd:attribute name="port" type="xsd:int"></xsd:attribute>
		<xsd:attribute name="databaseName" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="hbaseDatastoreType">
		<xsd:attribute name="quorum" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="ehcacheDeviceManagementCacheType"/>

	<xsd:complexType name="inboundProcessingChainType">
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="inbound-event-processor" type="inboundProcessorReferenceType">
					<xsd:annotation>
						<xsd:documentation>
							References a custom inbound event processor implementation.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="default-event-storage-processor" type="defaultEventStorageProcessorType">
					<xsd:annotation>
						<xsd:documentation>
							Provides standard behavior of storing SiteWhere events via
							service provider interfaces. If this event processor is not enabled, data will not
							be stored or otherwise processed by SiteWhere.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="inboundProcessorReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="defaultEventStorageProcessorType"/>

	<xsd:complexType name="outboundProcessingChainType">
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="outbound-event-processor" type="outboundProcessorReferenceType">
					<xsd:annotation>
						<xsd:documentation>
							References a custom outbound event processor implementation.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="provisioning-event-processor" type="provisioningEventProcessorType">
					<xsd:annotation>
						<xsd:documentation>
							Hands off outbound device command events to the provisioning
							subsystem. If this event processor is not configured, no commands will be sent to
							devices.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="outboundProcessorReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="provisioningEventProcessorType"/>

	<xsd:complexType name="provisioningType">
		<xsd:sequence>
			<xsd:element name="event-sources" type="eventSourcesType">
				<xsd:annotation>
					<xsd:documentation>
						Event sources receive and decode events so that they may be
						processed by SiteWhere.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="registration" type="registrationType">
				<xsd:annotation>
					<xsd:documentation>
						Registration elements define how inbound registration events are
						used to register devices.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="command-routing" type="commandRoutingType">
				<xsd:annotation>
					<xsd:documentation>
						Command routing determines which agent is used for processing a
						given command invocation.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="command-agents" type="commandAgentsType">
				<xsd:annotation>
					<xsd:documentation>
						Command agents process command invocation events, encoding them
						then delivering them to devices.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!-- Contains information about inbound event sources -->
	<xsd:complexType name="eventSourcesType">
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="event-source" type="eventSourceReferenceType">
					<xsd:annotation>
						<xsd:documentation>
							References a custom event source implementation.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mqtt-event-source" type="mqttEventSourceType">
					<xsd:annotation>
						<xsd:documentation>
							Event source that pulls messages from a single MQTT event
							reciever and decodes them.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<!-- Reference to an event source defined in Spring beans -->
	<xsd:complexType name="eventSourceReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<!-- Event source that pulls binary information from an MQTT topic and decodes it -->
	<xsd:complexType name="mqttEventSourceType">
		<xsd:sequence>
			<xsd:element name="decoder" type="eventDecoderReferenceType">
				<xsd:annotation>
					<xsd:documentation>
						References a custom event decoder implementation.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attributeGroup ref="mqtt-inbound-attributes"/>
	</xsd:complexType>

	<!-- Reference to an event decoder defined as a Spring bean -->
	<xsd:complexType name="eventDecoderReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>
	
	<!-- Attributes used for inbound MQTT processing -->
	<xsd:attributeGroup name="mqtt-inbound-attributes">
		<xsd:attribute name="hostname" type="xsd:string"></xsd:attribute>
		<xsd:attribute name="port" type="xsd:int"></xsd:attribute>
		<xsd:attribute name="topic" type="xsd:string"></xsd:attribute>
	</xsd:attributeGroup>

	<xsd:complexType name="registrationType">
		<xsd:sequence>
			<xsd:choice minOccurs="1" maxOccurs="1">
				<xsd:element name="registration-manager" type="registrationManagerReferenceType">
					<xsd:annotation>
						<xsd:documentation>
							References a custom registration manager implementation.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="registrationManagerReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="commandRoutingType">
		<xsd:sequence>
			<xsd:choice minOccurs="1" maxOccurs="1">
				<xsd:element name="command-router" type="commandRouterReferenceType">
					<xsd:annotation>
						<xsd:documentation>
							References a custom command router implementation.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="specification-mapping-router" type="specificationMappingRouterType">
					<xsd:annotation>
						<xsd:documentation>
							Command router that distributes commands to agents based on a
							mapping of specification token to command agent id.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="commandRouterReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="specificationMappingRouterType">
		<xsd:sequence>
			<xsd:element name="mapping" type="specificationMappingRouterMappingType"
				minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						Mapping of a specification token to an agent id.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="specificationMappingRouterMappingType">
		<xsd:attribute name="specification" type="xsd:string"></xsd:attribute>
		<xsd:attribute name="agent" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="commandAgentsType">
		<xsd:sequence>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="command-agent" type="commandAgentReferenceType">
					<xsd:annotation>
						<xsd:documentation>
							References a custom command agent implementation.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="twilio-command-agent" type="twilioCommandAgentType">
					<xsd:annotation>
						<xsd:documentation>
							Agent that delivers commands via Twilio SMS messages.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="commandAgentReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="twilioCommandAgentType">
		<xsd:sequence>
			<xsd:element name="encoder" type="commandExecutionEncoderReferenceType">
				<xsd:annotation>
					<xsd:documentation>
						References a custom command execution encoder implementation.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="parameter-extractor" type="commandDeliveryParameterExtractorReferenceType">
				<xsd:annotation>
					<xsd:documentation>
						References a custom command delivery parameter extractor
						implementation that extracts SMS delivery information from the
						device.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="agentId" type="xsd:string"></xsd:attribute>
		<xsd:attribute name="accountSid" type="xsd:string"></xsd:attribute>
		<xsd:attribute name="authToken" type="xsd:string"></xsd:attribute>
		<xsd:attribute name="fromPhoneNumber" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="commandAgentType">
		<xsd:sequence>
			<xsd:element name="encoder" type="commandExecutionEncoderReferenceType">
				<xsd:annotation>
					<xsd:documentation>
						References a custom command execution encoder implementation.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="parameter-extractor"
				type="commandDeliveryParameterExtractorReferenceType">
				<xsd:annotation>
					<xsd:documentation>
						References a custom command delivery parameter extractor
						implementation.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="delivery-provider" type="commandDeliveryProviderReferenceType">
				<xsd:annotation>
					<xsd:documentation>
						References a custom command delivery provider implementation.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="commandExecutionEncoderReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="commandDeliveryParameterExtractorReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

	<xsd:complexType name="commandDeliveryProviderReferenceType">
		<xsd:attribute name="ref" type="xsd:string"></xsd:attribute>
	</xsd:complexType>

</xsd:schema>